<?php

/**
 * @file blueimp.install
 * Installation and update functions for the Twitter Bootstrap
 * Modal Carousel Module
 */

/**
 * Default settings storage.
 */
function _blueimp_defaults() {
  return array(
    'trigger' => '',
    'navigation' => array(
      'startControls' => FALSE,
      'hidePageScrollbars' => TRUE,
      'carousel' => FALSE,
      'startSlideshow' => FALSE,
      'continuous' => TRUE,
      'slideshowInterval' => '5000',
      'transitionSpeed' => '400',
    ),
    'visibility' => array(
      'visibility' => 1,
      'pages' => '',
    ),
  );
}

/**
 * Implementation of hook_install().
 * This will create our system variable defaults.
 * The benefit is that we do not need to pass defaults
 * to variable_get(), which allows centralization of defaults.
 */
function blueimp_install() {
  variable_set('blueimp_settings', _blueimp_defaults());
}

/**
 * Implementation of hook_uninstall().
 * Only clears our variables, so a fresh installation can repopulate them.
 */
function blueimp_uninstall() {
  // Settings.
  variable_del('blueimp_settings');
}

/**
 * Implements hook_requirements().
 */
function blueimp_requirements($phase) {
  $requirements = array();
  // Ensure translations don't break at install time
  $t = get_t();

  // Check to see if the Blueimp library is available
  if ($phase == 'runtime') {
    $requirements['blueimp'] = array(
      'title' => $t('Blueimp'),
      'description' => $t('Library installed'),
      'severity' => REQUIREMENT_OK,
    );
    _blueimp_requirements_library_installed($requirements);
  }
  return $requirements;
}

/**
 * Check if the library is available
 *
 * @param array $requirements
 *  Requirements definition
 */
function _blueimp_requirements_library_installed(&$requirements) {
  $t = get_t();

  $path = libraries_get_path('blueimp');
  $installed = file_exists($path . '/js/jquery.blueimp-gallery.min.js') && file_exists($path . '/js/jquery.blueimp-gallery.js');

  // Check the results of the test
  if (!$installed) {
    $requirements['blueimp']['description'] = $t('Blueimp library not found. Please consult the README.txt for installation instructions.');
    $requirements['blueimp']['severity'] = REQUIREMENT_ERROR;
    $requirements['blueimp']['value'] = $t('Blueimp library not found.');
    return;
  }

  $js = file_exists($path . '/js/jquery.blueimp-gallery.js') ? fopen($path . '/js/jquery.blueimp-gallery.js', 'r') : fopen($path . '/js/jquery.blueimp-gallery.min.js', 'r');
  $header = fread($js, 64);
  $matches = array();
  if (preg_match("/ ([0-9]+)\.([0-9]+)\.([0-9]+)/", $header, $matches)) {
    if (!($matches[1] == 1 && $matches[2] >= 2)) {
      $requirements['blueimp']['description'] = $t('Blueimp must be version 1.2.2 or higher. Please consult the README.txt for installation instructions.');
      $requirements['blueimp']['severity'] = REQUIREMENT_WARNING;
      $requirements['blueimp']['value'] = $t('Incorrect version detected.');
      return;
    }
    else {
      $version = $matches[1] . "." . $matches[2] . "." . $matches[3];
      variable_set('blueimp_version', $version);
      $requirements['blueimp']['description'] = $t('Version %version installed', array( '%version' => $version));
      $requirements['blueimp']['value'] = $t('!version', array( '!version' => $version));
      return;
    }
  }
  else {
    $requirements['blueimp']['description'] = $t('Blueimp version could not be determined. Please consult the README.txt for installation instructions.');
    $requirements['blueimp']['severity'] = REQUIREMENT_WARNING;
    $requirements['blueimp']['value'] = $t('Unable to detect version.');
  }
}
