<?php
/**
 * @file
 * Code for the Enterprise Demo feature.
 */

include_once 'enterprise_demo.features.inc';

function enterprise_demo_menu() {
  $items = array();
  $items['enterprise_demo/init'] = array(
    'title' => 'Enterprise demo init',
    'page callback' => 'enterprise_demo_init_app',
    'access callback' => 'user_access',
    'access arguments' => array('admin intel'),
    'type' => MENU_CALLBACK,
  );
  $items['enterprise_demo/util'] = array(
    'title' => 'Enterprise demo util',
    'page callback' => 'enterprise_demo_util',
    'access callback' => 'user_access',
    'access arguments' => array('admin intel'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

function enterprise_demo_util() {

  $settings = variable_get('enterprise_apps_profile_settings', array());

  dsm($settings);

  $var = variable_get('enterprise_demo_debug', array());

  dsm($var);

  return '';

  features_revert(array('enterprise_demo' => array('field_instance')));

  return '';

  enterprise_apps_config_app('enterprise_webform_content');

  return '';
}

/**
 * Implements hook_enterprise_apps_app_enabled()
 */
function enterprise_demo_enterprise_apps_app_enabled() {
  // get batch processing for init_app
  $batch = enterprise_demo_enterprise_apps_app_enabled_batch() ;
  batch_set($batch);
  batch_process('<front>');
}


function enterprise_demo_enterprise_apps_app_enabled_batch() {
  global $base_path;

  $settings = variable_get('enterprise_apps_profile_settings', array());

  $debug = array();

  $operations = array();
  $required_apps = array(
    'enterprise_intel',
    'enterprise_social',
    'enterprise_social_content',
    'enterprise_user',
    'enterprise_user_content',
    'enterprise_comments',
    'enterprise_blog',
    'enterprise_blog_content',
    'enterprise_thankyoupage',
    'enterprise_thankyoupage_content',
    //'enterprise_webform_content', //? why is this before enterprise_webform
    'enterprise_webform',
    'enterprise_webform_content',
  );
  if (!empty($settings['demo']['mode'])
    && (($settings['demo']['mode'] == 'attract_convert') || $settings['demo']['mode'] == 'standard')) {
    $required_apps[] = 'enterprise_landingpages';
    $required_apps[] = 'enterprise_landingpages_content';
  }
  if (!empty($settings['demo']['mode']) && ($settings['demo']['mode'] == 'standard')) {
    $required_apps[] = 'enterprise_seo';
    $required_apps[] = 'enterprise_faq';
    $required_apps[] = 'enterprise_faq_content';
    $required_apps[] = 'enterprise_press';
    $required_apps[] = 'enterprise_press_content';
    //$required_apps[] = 'mailchimp_lists';
  }

  // filter out missing apps and content if demo content not enabled
  foreach ($required_apps AS $i => $app) {
    if (!enterprise_apps_module_files_exist($app)) {
      unset($required_apps[$i]);
      continue;
    }
    if (empty($settings['demo']['demo_content']) && (substr($app, -8) == '_content')) {
      unset($required_apps[$i]);
    };
  }

  if (!empty($settings['demo']['demo_content'])) {
    $required_apps[] = 'enterprise_demo_content';
  }
  else {
    $required_apps[] = 'enterprise_demo_nocontent';
  };


  /*
  if (enterprise_apps_module_files_exist('enterprise_intel')) {
    $required_apps[] = 'enterprise_intel';
  }
  if (enterprise_apps_module_files_exist('oedemo')) {
    //$required_apps[] = 'oedemo';
  }
  */

  $debug['required_apps0'] = $required_apps;

  foreach ($required_apps AS $i => $app) {
    if (!module_exists($app)) {
      $operations[] = enterprise_apps_get_batch_operation_enable_module($app);
      unset($required_apps[$i]);
    }
  }

  $required_apps[] = 'enterprise_demo';
  /*
  if (!empty($settings['demo']['demo_content'])) {
    $required_apps[] = 'enterprise_demo_content';
  }
  else {
    $required_apps[] = 'enterprise_demo_nocontent';
  };
  */

  $debug['required_apps1'] = $required_apps;

  foreach ($required_apps AS $app) {
    $operations[] = enterprise_apps_get_batch_operation_config_app($app);
  }

  $batch = array(
    'operations' => $operations,
    'title' => st('Installing Open Enterprise demo'),
    'init_message' => t('Preparing to install'),
    'error_message' => st('The installation has encountered an error.'),
    'finished' => '_enterprise_demo_config_app_batch_finished',
  );

  variable_set('enterprise_demo_debug', $debug);

  return $batch;
}

function _enterprise_demo_config_app_batch_finished($success, $results, $operations) {
  // CKEditor sets some settings that override the enterprise_editor. Make sure the
  // feature is fully reverted at this time.
  //features_revert(array('enterprise_editor' => array('ckeditor_profile', 'filter')));

  // must rebuild field instances after all fields are installed.
  features_revert(array('enterprise_demo' => array('field_instance')));
  features_revert(array('enterprise_intel' => array('field_instance')));

  // remove any redirects created on content import
  $query = db_delete('redirect')
    ->condition('access', 0);
  $query->execute();

  // bulk update pathauto paths
  module_load_include('inc', 'pathauto', 'pathauto.pathauto');
  $context = array();
  node_pathauto_bulk_update_batch_process($context);

  // set default front page
  $path = drupal_lookup_path("source", 'home');
  if (!empty($path)) {
    variable_set('site_frontpage', $path);
  }

  drupal_flush_all_caches();

  // clear status messages
  drupal_get_messages('status', TRUE);

  if ($success) {
    drupal_set_message(t('Congratulations! You have successfully installed Open Enterprise.'));
  }
  else {
    $error_operation = reset($operations);
    drupal_set_message(
      t('An error occurred during installation processing @operation with arguments : @args',
        array(
          '@operation' => $error_operation[0],
          '@args' => print_r($error_operation[0], TRUE),
        )
      ), 'error'
    );
  }
}

// run when module first enabled
function enterprise_demo_post_features_revert($component) {
  //dsm('enterprise_demo_post_features_revert');
  //dsm($component);
  //return;
  if ($component != 'uuid_entities') {
    return;
  }
  //enterprise_demo_app_init();
}

/*
function enterprise_demo_enterprise_apps_config_settings() {
  $settings = array(
    'enterprise_demo' => array(
      'menus' => array(),
    ),
  );

  return $settings;
}

function enterprise_demo_enterprise_apps_config_info() {
  $config = array();
  $config['enterprise_demo'] = array(
    'title' => t('Demo'),
  );

  return $config;
}

function enterprise_demo_enterprise_apps_config_info_alter(&$config_info) {
  //dsm($config_info);
}

function enterprise_demo_enterprise_apps_config_settings_alter(&$config_settings, &$config_info, $context) {
  //dsm($config_settings);
  return '';
}
*/