<?php
/**
 * @file
 * Drupal needs this blank file.
 */

/**
 * Implements hook_user_default_permissions_alter()
 *
 * All permissions for all apps are stored in this Feature. If a permission
 * is provided for a module/Feature that is not enabled, a warning is generated.
 * This function check to see if the permission is enabled and if not removes
 * the permissions thus eliminating the warning.
 *
 * @param $permissions
 */
function enterprise_permissions_user_default_permissions_alter(&$permissions) {
  $existing = &drupal_static(__FUNCTION__);
  if (!isset($existing)) {
    $existing = module_invoke_all('permission');
  }

  $r = user_roles();
  $roles = array();
  foreach ($r as $rid => $role) {
    $roles[$role] = 1;
  }

  foreach ($permissions as $permission => $perm_item) {
    // check if the permission exists (e.g. module is enabled), if not remove
    // permission
    if (!isset($existing[$permission])) {
      unset($permissions[$permission]);
      continue;
    }
    // check if role exists, if not remove the permission
    if (!empty($perm_item['roles']) && is_array($perm_item['roles'])) {
      foreach ($perm_item['roles'] as $name => $v) {
        if (empty($roles[$name])) {
          unset($permissions[$permission]['roles'][$name]);
        }
      }
    }
  }
}