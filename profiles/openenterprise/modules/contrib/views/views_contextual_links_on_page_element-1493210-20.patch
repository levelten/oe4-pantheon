diff --git a/js/views-contextual.js b/js/views-contextual.js
index 2e9dcf7..a2bbc2a 100644
--- a/js/views-contextual.js
+++ b/js/views-contextual.js
@@ -9,7 +9,7 @@ Drupal.behaviors.viewsContextualLinks = {
     // If there are views-related contextual links attached to the main page
     // content, find the smallest region that encloses both the links and the
     // view, and display it as a contextual links region.
-    $('.views-contextual-links-page', context).closest(':has(.view)').addClass('contextual-links-region');
+    $('.views-contextual-links-page', context).closest(':has(".view"):not("body")').addClass('contextual-links-region');
   }
 };
 
diff --git a/views.module b/views.module
index 4bc3496..d0abb27 100644
--- a/views.module
+++ b/views.module
@@ -549,7 +549,7 @@ function views_page_alter(&$page) {
 }
 
 /**
- * Implements MODULE_preprocess_HOOK().
+ * Implements MODULE_preprocess_HOOK() for html.tpl.php.
  */
 function views_preprocess_html(&$variables) {
   // If the page contains a view as its main content, contextual links may have
@@ -567,7 +567,7 @@ function views_preprocess_html(&$variables) {
   if (!empty($variables['page']['#views_contextual_links_info'])) {
     $key = array_search('contextual-links-region', $variables['classes_array']);
     if ($key !== FALSE) {
-      unset($variables['classes_array'][$key]);
+      $variables['classes_array'] = array_diff($variables['classes_array'], array('contextual-links-region'));
       // Add the JavaScript, with a group and weight such that it will run
       // before modules/contextual/contextual.js.
       drupal_add_js(drupal_get_path('module', 'views') . '/js/views-contextual.js', array('group' => JS_LIBRARY, 'weight' => -1));
@@ -576,6 +576,27 @@ function views_preprocess_html(&$variables) {
 }
 
 /**
+* Implements hook_preprocess_HOOK() for page.tpl.php.
+*/
+function views_preprocess_page(&$variables) {
+  // If the page contains a view as its main content, contextual links may have
+  // been attached to the page as a whole; for example, by views_page_alter().
+  // This allows them to be associated with the page and rendered by default
+  // next to the page title (which we want). However, it also causes the
+  // Contextual Links module to treat the wrapper for the entire page (i.e.,
+  // the <body> tag) as the HTML element that these contextual links are
+  // associated with. This we don't want; for better visual highlighting, we
+  // prefer a smaller region to be chosen. The region we prefer differs from
+  // theme to theme and depends on the details of the theme's markup in
+  // page.tpl.php, so we can only find it using JavaScript. We therefore remove
+  // the "contextual-links-region" class from the <body> tag here and add
+  // JavaScript that will insert it back in the correct place.
+  if (!empty($variables['page']['#views_contextual_links_info'])) {
+    $variables['classes_array'] = array_diff($variables['classes_array'], array('contextual-links-region'));
+  }
+}
+
+/**
  * Implements hook_contextual_links_view_alter().
  */
 function views_contextual_links_view_alter(&$element, $items) {
