<?php
/**
 * @file
 * Code for the Enterprise Demo feature.
 */

function enterprise_demo_menu() {
  $items = array();
  $items['enterprise_demo/init'] = array(
    'title' => 'Enterprise demo init',
    'page callback' => 'enterprise_demo_init_app',
    'access callback' => 'user_access',
    'access arguments' => array('admin intel'),
    'type' => MENU_CALLBACK,
  );
  $items['enterprise_demo/util'] = array(
    'title' => 'Enterprise demo util',
    'page callback' => 'enterprise_demo_util',
    'access callback' => 'user_access',
    'access arguments' => array('admin intel'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

function enterprise_demo_util() {

  $settings = variable_get('enterprise_apps_profile_settings', array());

  dsm($settings);

  $var = variable_get('enterprise_demo_debug', array());

  dsm($var);

  return '';

  $info = enterprise_demo_enterprise_apps_install_demo_info();

  $info['required_apps'][] = 'enterprise_work';

  $apps = array();
  foreach ($info['required_apps'] as $app) {
    if (enterprise_apps_module_files_exist($app)) {
      $apps[] = $app;
    }
    if (enterprise_apps_module_files_exist($app . '_config')) {
      $apps[] = $app . '_config';
    }
  }


  $nodes = array();
  foreach ($apps as $app) {
    $module_path = drupal_get_path('module', $app);
    $file_path = $module_path . '/' . $app . '.features.inc';
    if (file_exists($file_path)) {
      require_once($file_path);
      $hook_name = $app . '_node_info';
      if (function_exists($hook_name)) {
        $nodes += $hook_name();
      }
      dsm($file_path);
    }
  }
  dsm($nodes);
  $existing = node_type_get_types();
  dsm($existing);
  foreach ($nodes as $type => $def) {
    if (empty($existing[$type])) {
      $def['type'] = $type;
      $def = node_type_set_defaults($def);
      node_type_save($def);
    }
  }

  return 'OK';

  $settings = variable_get('enterprise_apps_profile_settings', array());

  dsm($settings);

  $var = variable_get('enterprise_demo_debug', array());

  dsm($var);

  return '';

  features_revert(array('enterprise_demo' => array('field_instance')));

  return '';

  enterprise_apps_config_app('enterprise_webform_content');

  return '';
}



function enterprise_demo_enterprise_apps_install_demo_info() {
  global $base_path;

  $settings = variable_get('enterprise_apps_profile_settings', array());

  $required_apps = array(
    'enterprise_intel', // contains base fields controls for Intelligence
    'enterprise_social',
    'enterprise_social_content',
    'enterprise_seo',
    'enterprise_seo_config',
    'enterprise_user',
    'enterprise_user_content',
    'enterprise_comments',
    'enterprise_blog',
    'enterprise_blog_content',
    'enterprise_dashboard',
    'enterprise_thankyoupage',
    'enterprise_thankyoupage_content',
    'enterprise_webform',
    'enterprise_webform_content',
  );
  if (!empty($settings['demo']['mode'])
    && (($settings['demo']['mode'] == 'attract_convert') || $settings['demo']['mode'] == 'standard')) {
    $required_apps[] = 'enterprise_landingpage';
    $required_apps[] = 'enterprise_conversion';
    $required_apps[] = 'enterprise_conversion_content';
  }

  /*
   * Insert Apps for vertical demos here. Using
   */
  //$required_apps[] = 'enterprise_APP;

  $features_revert = array();
  $features_revert['enterprise_intel'] = array(
    'field_instances'
  );

  $info = array(
    'required_apps' => $required_apps,
  );

  return $info;
}